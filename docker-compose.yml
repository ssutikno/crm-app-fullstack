# version: '3.8'

services:
  # Add the new database service
  db:
    image: postgres:14-alpine
    container_name: crm_db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/db/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql
      - ./backend/db/02_master_data.sql:/docker-entrypoint-initdb.d/02_master_data.sql

  backend:
    build: ./backend
    container_name: crm_backend
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./backend:/app
      - /app/node_modules
    # Pass database connection details to the backend
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db # The service name of our database container
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      
    depends_on:
      - db # Make sure the database starts before the backend

  frontend:
    build: ./frontend
    container_name: crm_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - WDS_SOCKET_PORT=3000    
    depends_on:
      - backend

# Define the volume for persistent database storage
volumes:
  postgres-data: